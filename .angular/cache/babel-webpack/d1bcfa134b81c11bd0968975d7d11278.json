{"ast":null,"code":"import _classCallCheck from \"D:\\\\work\\\\other\\\\ng-certification-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\work\\\\other\\\\ng-certification-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../services/storage.service\";\nimport * as i2 from \"@angular/forms\";\n\nvar _c0 = function _c0() {\n  return {\n    standalone: true\n  };\n};\n\nexport var AddLocationComponent = /*#__PURE__*/(function () {\n  var AddLocationComponent = /*#__PURE__*/function () {\n    function AddLocationComponent(storageService) {\n      _classCallCheck(this, AddLocationComponent);\n\n      this.storageService = storageService;\n      this.addedZipCode = new EventEmitter();\n      this.zipCode = \"\";\n    }\n    /**\r\n     * This method is used to add Location in local storage.\r\n     */\n\n\n    _createClass(AddLocationComponent, [{\n      key: \"addLocation\",\n      value: function addLocation() {\n        var isStored = this.storageService.store(this.zipCode);\n\n        if (isStored) {\n          this.addedZipCode.emit(this.zipCode);\n          alert(\"Location Added Successfully.\");\n          this.zipCode = \"\";\n        } else {//  alert(\"Location Already Exist.\");\n        } // this.weatherInfoDataService.getWeatherInfo(this.zipCode).subscribe({\n        //   next: (res) => {\n        //     console.log(res);\n        //     const isStored = this.storageService.store(+this.zipCode);\n        //     if (isStored) {\n        //       this.zipCode = \"\";\n        //       alert(\"Location Added Successfully.\");\n        //     } else {\n        //       alert(\"Location Already Exist.\");\n        //     }\n        //   },\n        //   error: () => alert(\"Invalid Zip Code\"),\n        // });\n\n      }\n      /**\r\n       * This method is used to remove location from list.\r\n       *\r\n       * @param zipCode string\r\n       */\n\n    }, {\n      key: \"removeLocation\",\n      value: function removeLocation(zipCode) {\n        this.storageService.removeLocation(zipCode);\n      }\n    }]);\n\n    return AddLocationComponent;\n  }();\n\n  AddLocationComponent.ɵfac = function AddLocationComponent_Factory(t) {\n    return new (t || AddLocationComponent)(i0.ɵɵdirectiveInject(i1.StorageService));\n  };\n\n  AddLocationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddLocationComponent,\n    selectors: [[\"add-weather-location\"]],\n    outputs: {\n      addedZipCode: \"addedZipCode\"\n    },\n    decls: 8,\n    vars: 4,\n    consts: [[1, \"well\"], [\"placeholder\", \"Zip code\", \"type\", \"text\", \"id\", \"addLocation\", \"maxlength\", \"6\", \"type\", \"text\", \"pattern\", \"^[1-9]{1}[0-9]{2}[0-9]{3}$\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"location\", \"ngModel\"], [\"id\", \"addLocationBtn\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"]],\n    template: function AddLocationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵtext(2, \"Enter a zip code:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1, 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AddLocationComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.zipCode = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AddLocationComponent_Template_button_click_6_listener() {\n          return ctx.addLocation();\n        });\n        i0.ɵɵtext(7, \" Add location \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        var _r0 = i0.ɵɵreference(4);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.zipCode)(\"ngModelOptions\", i0.ɵɵpureFunction0(3, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid && !_r0.value);\n      }\n    },\n    directives: [i2.DefaultValueAccessor, i2.MaxLengthValidator, i2.PatternValidator, i2.RequiredValidator, i2.NgControlStatus, i2.NgModel],\n    styles: [\"\"]\n  });\n  return AddLocationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}