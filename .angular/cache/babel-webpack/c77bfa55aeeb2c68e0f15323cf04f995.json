{"ast":null,"code":"import _classCallCheck from \"D:\\\\work\\\\other\\\\ng-certification-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\work\\\\other\\\\ng-certification-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from '@angular/core';\n\nvar AddLocationComponent = /*#__PURE__*/function () {\n  function AddLocationComponent(storageService, weatherInfoDataService) {\n    _classCallCheck(this, AddLocationComponent);\n\n    this.storageService = storageService;\n    this.weatherInfoDataService = weatherInfoDataService;\n    this.zipCode = '';\n    this.locationList = [];\n  }\n  /**\r\n   * This method is used to add Location in local storage.\r\n   */\n\n\n  _createClass(AddLocationComponent, [{\n    key: \"addLocation\",\n    value: function addLocation() {\n      this.weatherInfoDataService.getWeatherInfo(this.zipCode).subscribe({\n        next: function next(res) {\n          console.log(res);\n        },\n        error: function error() {\n          return alert('Invalid Zip Code');\n        }\n      }); // const isStored = this.storageService.store(+this.zipCode);\n      // if (isStored) {\n      //   this.zipCode = '';\n      //   alert('Location Added Successfully.');\n      // } else {\n      //   alert('Location Already Exist.');\n      // }\n      // this.locationList = this.storageService.getStoredLocationList();\n    }\n    /**\r\n     * This method is used to remove location from list.\r\n     *\r\n     * @param zipCode number\r\n     */\n\n  }, {\n    key: \"removeLocation\",\n    value: function removeLocation(zipCode) {\n      this.storageService.removeLocation(zipCode);\n    }\n  }]);\n\n  return AddLocationComponent;\n}();\n\nAddLocationComponent = __decorate([Component({\n  selector: 'add-weather-location',\n  templateUrl: './add-weather-location.component.html',\n  styleUrls: ['./add-weather-location.component.css']\n})], AddLocationComponent);\nexport { AddLocationComponent };","map":null,"metadata":{},"sourceType":"module"}