{"ast":null,"code":"import _classCallCheck from \"D:\\\\work\\\\other\\\\ng-certification-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\work\\\\other\\\\ng-certification-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/storage.service\";\nimport * as i2 from \"../services/weather-info.data.service\";\nexport var LocationEntryComponent = /*#__PURE__*/(function () {\n  var LocationEntryComponent = /*#__PURE__*/function () {\n    function LocationEntryComponent(storageService, weatherInfoDataService) {\n      _classCallCheck(this, LocationEntryComponent);\n\n      this.storageService = storageService;\n      this.weatherInfoDataService = weatherInfoDataService;\n      this.zipCode = '';\n      this.locationList = [];\n    }\n    /**\r\n     * This method is used to add Location in local storage.\r\n     */\n\n\n    _createClass(LocationEntryComponent, [{\n      key: \"addLocation\",\n      value: function addLocation() {\n        this.weatherInfoDataService.getWeatherInfo(this.zipCode).subscribe({\n          next: function next(res) {\n            console.log(res);\n          },\n          error: function error() {\n            return alert('Invalid Zip Code');\n          }\n        }); // const isStored = this.storageService.store(+this.zipCode);\n        // if (isStored) {\n        //   this.zipCode = '';\n        //   alert('Location Added Successfully.');\n        // } else {\n        //   alert('Location Already Exist.');\n        // }\n        // this.locationList = this.storageService.getStoredLocationList();\n      }\n      /**\r\n       * This method is used to remove location from list.\r\n       *\r\n       * @param zipCode number\r\n       */\n\n    }, {\n      key: \"removeLocation\",\n      value: function removeLocation(zipCode) {\n        this.storageService.removeLocation(zipCode);\n      }\n    }]);\n\n    return LocationEntryComponent;\n  }();\n\n  LocationEntryComponent.ɵfac = function LocationEntryComponent_Factory(t) {\n    return new (t || LocationEntryComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.WeatherInfoDataService));\n  };\n\n  LocationEntryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LocationEntryComponent,\n    selectors: [[\"app-location-entry\"]],\n    decls: 7,\n    vars: 0,\n    consts: [[1, \"well\"], [\"placeholder\", \"Zipcode\", \"type\", \"text\", \"id\", \"addLocation\", 1, \"form-control\"], [\"id\", \"addLocationBtn\", 1, \"btn\", \"btn-primary\"]],\n    template: function LocationEntryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵtext(2, \"Enter a zipcode:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 1);\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"button\", 2);\n        i0.ɵɵtext(6, \" Add location \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".form-inline[_ngcontent-%COMP%]{margin-top:10vh;padding:1.5rem;border:1px solid black}\"],\n    changeDetection: 0\n  });\n  return LocationEntryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}